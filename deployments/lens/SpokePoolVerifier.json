{
  "address": "0xd524a49274D7b55852A2195D7622457FD77BA9bD",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidMsgValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSpokePool",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract V3SpokePoolInterface",
          "name": "spokePool",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "recipient",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "inputToken",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "outputAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "destinationChainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "exclusiveRelayer",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "quoteTimestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "fillDeadline",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "exclusivityDeadline",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "76ef93d1f78b43005b57a7e3e7ddf718",
  "metadata": {
    "llvm_options": [],
    "optimizer_settings": {
      "is_debug_logging_enabled": false,
      "is_fallback_to_size_enabled": false,
      "is_verify_each_enabled": false,
      "level_back_end": "Aggressive",
      "level_middle_end": "Aggressive",
      "level_middle_end_size": "Zero"
    },
    "solc_version": "0.8.19",
    "solc_zkvm_edition": null,
    "source_metadata": {
      "compiler": {
        "version": "0.8.19+commit.7dd6d404"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [],
            "name": "InvalidMsgValue",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidSpokePool",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "contract V3SpokePoolInterface",
                "name": "spokePool",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "recipient",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "inputToken",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "inputAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "outputAmount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "destinationChainId",
                "type": "uint256"
              },
              {
                "internalType": "bytes32",
                "name": "exclusiveRelayer",
                "type": "bytes32"
              },
              {
                "internalType": "uint32",
                "name": "quoteTimestamp",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "fillDeadline",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "exclusivityDeadline",
                "type": "uint32"
              },
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "devdoc": {
          "custom:security-contact": "bugs@across.to",
          "details": "This contract must be deployed via Create2 to the same address on all chains. That way, an errant transaction sent to the wrong chain will be blocked by this contract rather than hitting a dead address. This means that this contract will not work to protect chains, like zkSync, where Create2 address derivations don't match other chains. Source: https://era.zksync.io/docs/reference/architecture/differences-with-ethereum.html#create-create2",
          "kind": "dev",
          "methods": {
            "deposit(address,bytes32,bytes32,uint256,uint256,uint256,bytes32,uint32,uint32,uint32,bytes)": {
              "details": "Protects the caller from losing their ETH (or other native token) by reverting if the SpokePool address they intended to call does not exist on this chain. Because this contract can be deployed at the same address everywhere callers should be protected even if the transaction is submitted to an unintended network. This contract should only be used for native token deposits, as this problem only exists for native tokens.",
              "params": {
                "destinationChainId": "Denotes network where user will receive funds from SpokePool by a relayer.",
                "exclusiveRelayer": "Address of the relayer who has exclusive rights to fill this deposit. Can be set to 0x0 if no exclusivity period is desired. If so, then must set exclusivityDeadline to 0.",
                "exclusivityDeadline": "Timestamp after which any relayer can fill this deposit. Must set to 0 if exclusiveRelayer is set to 0x0, and vice versa.",
                "fillDeadline": "Timestamp after which this deposit can no longer be filled.",
                "inputAmount": "Amount of tokens to deposit.",
                "inputToken": "Token to lock into this contract to initiate deposit.",
                "message": "Arbitrary data that can be used to pass additional information to the recipient along with the tokens. Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.",
                "outputAmount": "Amount of tokens to receive on destination chain.",
                "quoteTimestamp": "Timestamp used by relayers to compute this deposit's realizedLPFeePct which is paid to LP pool on HubPool.",
                "recipient": "Address to receive funds at on destination chain.",
                "spokePool": "Address of the SpokePool contract that the user is intending to call."
              }
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "deposit(address,bytes32,bytes32,uint256,uint256,uint256,bytes32,uint32,uint32,uint32,bytes)": {
              "notice": "Passthrough function to `deposit()` on the SpokePool contract."
            }
          },
          "notice": "SpokePoolVerifier is a contract that verifies that the SpokePool exists on this chain before sending ETH to it.",
          "version": 1
        }
      },
      "settings": {
        "compilationTarget": {
          "contracts/SpokePoolVerifier.sol": "SpokePoolVerifier"
        },
        "evmVersion": "paris",
        "libraries": {},
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "@openzeppelin/contracts/utils/Address.sol": {
          "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
          "license": "MIT",
          "urls": [
            "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
            "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
          ]
        },
        "contracts/SpokePoolVerifier.sol": {
          "keccak256": "0x3207aa9eb21bb96acb60d8f246a852434181f8e06dd7adc977786a9cb0394971",
          "license": "BUSL-1.1",
          "urls": [
            "bzz-raw://60597091dc6b7c3d03db66d375c9688d04f3cd292434d68676eb7862fce4e522",
            "dweb:/ipfs/Qmew4DfEHehzzbHaxQM5e6EVj4K6q2Lang4RiTsGz65w2K"
          ]
        },
        "contracts/interfaces/V3SpokePoolInterface.sol": {
          "keccak256": "0x15819fd7ff7b33d3fc55de30a5eb1136dfbcf953be2a962dddc550d77e1823fe",
          "license": "MIT",
          "urls": [
            "bzz-raw://4f8c43279c38b718fe471171f8dd2eb9f6e8550b939ce65c7c71f0aa6233c421",
            "dweb:/ipfs/QmXFCLp8jWNKi7QRYTN9ZyNoxsTL1RZfJPLMYzUN9xQC9K"
          ]
        },
        "contracts/libraries/AddressConverters.sol": {
          "keccak256": "0x378f28bb4a17a5c47457cb9341086b2140f7faf6c048f702d3528166f0d74453",
          "license": "BUSL-1.1",
          "urls": [
            "bzz-raw://0fa273e028c9555202cac439ddf458d074b66c6f74778b2b0e5e17a0e331dc38",
            "dweb:/ipfs/QmYqEaWXgiJnsH8wRAuTKF41bxkxxvY947wdKoZrjM7HVx"
          ]
        }
      },
      "version": 1
    },
    "zk_version": "1.5.7"
  },
  "bytecode": "0x0001000000000002000400000000000200000000000103550000000100200190000000370000c13d00000060021002700000004c02200197000000040020008c000000480000413d000000000301043b000001640020008c000000480000413d0000004e033001970000004f0030009c000000480000c13d0000000403100370000000000a03043b0000005000a0009c000000480000213d000000e403100370000000000b03043b0000004c00b0009c000000480000213d0000010403100370000000000c03043b0000004c00c0009c000000480000213d0000012403100370000000000d03043b0000004c00d0009c000000480000213d0000014403100370000000000403043b000000510040009c000000480000213d0000002303400039000000000023004b000000480000813d0000000405400039000000000351034f000000000303043b000000520030009c000000310000813d0000001f063000390000005e066001970000003f066000390000005e06600197000000530060009c000000410000a13d0000005c01000041000000000010043f0000004101000039000000040010043f0000005d010000410000012d000104300000008001000039000000400010043f0000000001000416000000000001004b000000480000c13d0000002001000039000001000010044300000120000004430000004d010000410000012c0001042e0000008006600039000000400060043f000000800030043f00000000043400190000002404400039000000000024004b0000004a0000a13d00000000010000190000012d000104300000002002500039000000000421034f0000005e053001980000001f0630018f000000a002500039000000560000613d000000a007000039000000000804034f000000008908043c0000000007970436000000000027004b000000520000c13d000000000006004b000000630000613d000000000454034f0000000305600210000000000602043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f0000000000420435000000a00230003900000000000204350000006401100370000000000101043b0000000002000416000000000012004b000000800000c13d00010000000d001d00020000000c001d00030000000b001d0000005601000041000000000010044300040000000a001d0000000400a0044300000000010004140000004c0010009c0000004c01008041000000c00110021000000057011001c70000800202000039012b01260000040f0000000100200190000000f00000613d000000000101043b000000000001004b000000880000c13d000000400100043d0000005b02000041000000820000013d000000400100043d000000540200004100000000002104350000004c0010009c0000004c01008041000000400110021000000055011001c70000012d00010430000000560100004100000000001004430000000401000029000000040010044300000000010004140000004c0010009c0000004c01008041000000c00110021000000057011001c70000800202000039012b01260000040f0000000100200190000000f00000613d000000000101043b000000000001004b000000030600002900000002010000290000000102000029000000480000613d0000004c011001970000004c02200197000000400700043d0000005803000041000000000037043500000004037000390000000004000411000000000043043500000000030003670000002404300370000000000404043b000000240570003900000000004504350000004404300370000000000404043b00000044057000390000000000450435000000640470003900000000000404350000006404300370000000000404043b000000840570003900000000004504350000008404300370000000000404043b000000a4057000390000000000450435000000a404300370000000000404043b000000c4057000390000000000450435000000c403300370000000000303043b000001640470003900000180050000390000000000540435000001440470003900000000002404350000012402700039000000000012043500000104017000390000000000610435000000e40170003900000000003104350000018402700039000000800100043d0000000000120435000300000007001d000001a402700039000000000001004b000000d60000613d00000000030000190000000004230019000000a005300039000000000505043300000000005404350000002003300039000000000013004b000000cf0000413d0000000002210019000000000002043500000000020004140000000403000029000000040030008c000000f90000613d0000001f011000390000005e01100197000001a4011000390000004c0010009c0000004c01008041000000600110021000000003030000290000004c0030009c0000004c030080410000004003300210000000000131019f0000004c0020009c0000004c02008041000000c002200210000000000112019f0000000002000416000000000002004b000000f10000c13d0000000402000029000000f60000013d000000000001042f00000059011001c70000800902000039000000000300041600000004040000290000000005000019012b01210000040f0000000100200190000001000000613d0000000301000029000000510010009c000000310000213d0000000301000029000000400010043f00000000010000190000012c0001042e00000060061002700000001f0460018f0000005a05600198000000400200043d00000000035200190000010c0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000038004b000001080000c13d0000004c06600197000000000004004b0000011a0000613d000000000151034f0000000304400210000000000503043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f000000000013043500000060016002100000004c0020009c0000004c020080410000004002200210000000000112019f0000012d00010430000000000001042f00000124002104210000000102000039000000000001042d0000000002000019000000000001042d00000129002104230000000102000039000000000001042d0000000002000019000000000001042d0000012b000004320000012c0001042e0000012d000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000004aa81f5200000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000ffffffffffffff7f1841b4e10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000ad5425c600000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffe0b474246c000000000000000000000000000000000000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00000000000000000000000000000000000000000000000000000000000000000770c5b6bb12cb972b4f17c04f3bdca1d7098f13367c99745c4720ade0be96ff6",
  "deployedBytecode": "0x0001000000000002000400000000000200000000000103550000000100200190000000370000c13d00000060021002700000004c02200197000000040020008c000000480000413d000000000301043b000001640020008c000000480000413d0000004e033001970000004f0030009c000000480000c13d0000000403100370000000000a03043b0000005000a0009c000000480000213d000000e403100370000000000b03043b0000004c00b0009c000000480000213d0000010403100370000000000c03043b0000004c00c0009c000000480000213d0000012403100370000000000d03043b0000004c00d0009c000000480000213d0000014403100370000000000403043b000000510040009c000000480000213d0000002303400039000000000023004b000000480000813d0000000405400039000000000351034f000000000303043b000000520030009c000000310000813d0000001f063000390000005e066001970000003f066000390000005e06600197000000530060009c000000410000a13d0000005c01000041000000000010043f0000004101000039000000040010043f0000005d010000410000012d000104300000008001000039000000400010043f0000000001000416000000000001004b000000480000c13d0000002001000039000001000010044300000120000004430000004d010000410000012c0001042e0000008006600039000000400060043f000000800030043f00000000043400190000002404400039000000000024004b0000004a0000a13d00000000010000190000012d000104300000002002500039000000000421034f0000005e053001980000001f0630018f000000a002500039000000560000613d000000a007000039000000000804034f000000008908043c0000000007970436000000000027004b000000520000c13d000000000006004b000000630000613d000000000454034f0000000305600210000000000602043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f0000000000420435000000a00230003900000000000204350000006401100370000000000101043b0000000002000416000000000012004b000000800000c13d00010000000d001d00020000000c001d00030000000b001d0000005601000041000000000010044300040000000a001d0000000400a0044300000000010004140000004c0010009c0000004c01008041000000c00110021000000057011001c70000800202000039012b01260000040f0000000100200190000000f00000613d000000000101043b000000000001004b000000880000c13d000000400100043d0000005b02000041000000820000013d000000400100043d000000540200004100000000002104350000004c0010009c0000004c01008041000000400110021000000055011001c70000012d00010430000000560100004100000000001004430000000401000029000000040010044300000000010004140000004c0010009c0000004c01008041000000c00110021000000057011001c70000800202000039012b01260000040f0000000100200190000000f00000613d000000000101043b000000000001004b000000030600002900000002010000290000000102000029000000480000613d0000004c011001970000004c02200197000000400700043d0000005803000041000000000037043500000004037000390000000004000411000000000043043500000000030003670000002404300370000000000404043b000000240570003900000000004504350000004404300370000000000404043b00000044057000390000000000450435000000640470003900000000000404350000006404300370000000000404043b000000840570003900000000004504350000008404300370000000000404043b000000a4057000390000000000450435000000a404300370000000000404043b000000c4057000390000000000450435000000c403300370000000000303043b000001640470003900000180050000390000000000540435000001440470003900000000002404350000012402700039000000000012043500000104017000390000000000610435000000e40170003900000000003104350000018402700039000000800100043d0000000000120435000300000007001d000001a402700039000000000001004b000000d60000613d00000000030000190000000004230019000000a005300039000000000505043300000000005404350000002003300039000000000013004b000000cf0000413d0000000002210019000000000002043500000000020004140000000403000029000000040030008c000000f90000613d0000001f011000390000005e01100197000001a4011000390000004c0010009c0000004c01008041000000600110021000000003030000290000004c0030009c0000004c030080410000004003300210000000000131019f0000004c0020009c0000004c02008041000000c002200210000000000112019f0000000002000416000000000002004b000000f10000c13d0000000402000029000000f60000013d000000000001042f00000059011001c70000800902000039000000000300041600000004040000290000000005000019012b01210000040f0000000100200190000001000000613d0000000301000029000000510010009c000000310000213d0000000301000029000000400010043f00000000010000190000012c0001042e00000060061002700000001f0460018f0000005a05600198000000400200043d00000000035200190000010c0000613d000000000701034f0000000008020019000000007907043c0000000008980436000000000038004b000001080000c13d0000004c06600197000000000004004b0000011a0000613d000000000151034f0000000304400210000000000503043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f000000000013043500000060016002100000004c0020009c0000004c020080410000004002200210000000000112019f0000012d00010430000000000001042f00000124002104210000000102000039000000000001042d0000000002000019000000000001042d00000129002104230000000102000039000000000001042d0000000002000019000000000001042d0000012b000004320000012c0001042e0000012d000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000ffffffff000000000000000000000000000000000000000000000000000000004aa81f5200000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000ffffffffffffff7f1841b4e10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000ad5425c600000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffe0b474246c000000000000000000000000000000000000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00000000000000000000000000000000000000000000000000000000000000000770c5b6bb12cb972b4f17c04f3bdca1d7098f13367c99745c4720ade0be96ff6",
  "devdoc": {
    "custom:security-contact": "bugs@across.to",
    "details": "This contract must be deployed via Create2 to the same address on all chains. That way, an errant transaction sent to the wrong chain will be blocked by this contract rather than hitting a dead address. This means that this contract will not work to protect chains, like zkSync, where Create2 address derivations don't match other chains. Source: https://era.zksync.io/docs/reference/architecture/differences-with-ethereum.html#create-create2",
    "kind": "dev",
    "methods": {
      "deposit(address,bytes32,bytes32,uint256,uint256,uint256,bytes32,uint32,uint32,uint32,bytes)": {
        "details": "Protects the caller from losing their ETH (or other native token) by reverting if the SpokePool address they intended to call does not exist on this chain. Because this contract can be deployed at the same address everywhere callers should be protected even if the transaction is submitted to an unintended network. This contract should only be used for native token deposits, as this problem only exists for native tokens.",
        "params": {
          "destinationChainId": "Denotes network where user will receive funds from SpokePool by a relayer.",
          "exclusiveRelayer": "Address of the relayer who has exclusive rights to fill this deposit. Can be set to 0x0 if no exclusivity period is desired. If so, then must set exclusivityDeadline to 0.",
          "exclusivityDeadline": "Timestamp after which any relayer can fill this deposit. Must set to 0 if exclusiveRelayer is set to 0x0, and vice versa.",
          "fillDeadline": "Timestamp after which this deposit can no longer be filled.",
          "inputAmount": "Amount of tokens to deposit.",
          "inputToken": "Token to lock into this contract to initiate deposit.",
          "message": "Arbitrary data that can be used to pass additional information to the recipient along with the tokens. Note: this is intended to be used to pass along instructions for how a contract should use or allocate the tokens.",
          "outputAmount": "Amount of tokens to receive on destination chain.",
          "quoteTimestamp": "Timestamp used by relayers to compute this deposit's realizedLPFeePct which is paid to LP pool on HubPool.",
          "recipient": "Address to receive funds at on destination chain.",
          "spokePool": "Address of the SpokePool contract that the user is intending to call."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(address,bytes32,bytes32,uint256,uint256,uint256,bytes32,uint32,uint32,uint32,bytes)": {
        "notice": "Passthrough function to `deposit()` on the SpokePool contract."
      }
    },
    "notice": "SpokePoolVerifier is a contract that verifies that the SpokePool exists on this chain before sending ETH to it.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
